[{"/Users/oosh/Desktop/Programming/Projects/porfolio/src/index.js":"1","/Users/oosh/Desktop/Programming/Projects/porfolio/src/App.js":"2","/Users/oosh/Desktop/Programming/Projects/porfolio/src/reportWebVitals.js":"3","/Users/oosh/Desktop/Programming/Projects/porfolio/src/navbar.js":"4","/Users/oosh/Desktop/Programming/Projects/porfolio/src/particle-container.js":"5","/Users/oosh/Desktop/Programming/Projects/porfolio/src/about.js":"6"},{"size":500,"mtime":1609906785635,"results":"7","hashOfConfig":"8"},{"size":919,"mtime":1610597953215,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609906785638,"results":"10","hashOfConfig":"8"},{"size":2809,"mtime":1610489595690,"results":"11","hashOfConfig":"8"},{"size":1212,"mtime":1610258415028,"results":"12","hashOfConfig":"8"},{"size":4200,"mtime":1610598043306,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1m3gsv8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/oosh/Desktop/Programming/Projects/porfolio/src/index.js",[],["28","29"],"/Users/oosh/Desktop/Programming/Projects/porfolio/src/App.js",[],"/Users/oosh/Desktop/Programming/Projects/porfolio/src/reportWebVitals.js",[],"/Users/oosh/Desktop/Programming/Projects/porfolio/src/navbar.js",["30"],"import React, { useState, useEffect } from 'react';\n\nconst Navbar = () => {\n  const [state, setActive] = useState({\n    home: 'inactive',\n    about: 'inactive',\n    port: 'inactive',\n    cont: 'inactive',\n  });\n  const [buttonScroll, setButtonScroll] = useState(false);\n\n  const ininitalState = {\n    home: 'inactive',\n    about: 'inactive',\n    port: 'inactive',\n    cont: 'inactive',\n  };\n\n  const handleClick = (button, x, y) => {\n    setButtonScroll(true);\n\n    if (button === 1 && home === 'inactive') {\n      setActive({ ...ininitalState, home: 'active' });\n      console.log(home);\n    } else if (button === 2) {\n      setActive({ ...ininitalState, about: 'active' });\n    } else if (button === 3) {\n      setActive({ ...ininitalState, port: 'active' });\n    } else if (button === 4) {\n      setActive({ ...ininitalState, cont: 'active' });\n    }\n\n    window.scrollTo({\n      top: x,\n      left: y,\n      behavior: 'smooth',\n    });\n\n    setTimeout(function () {\n      setButtonScroll(false);\n    }, 750);\n  };\n\n  const handleScroll = () => {\n    if (\n      window.scrollY >= 0 &&\n      window.scrollY <= 749 &&\n      home === 'inactive' &&\n      buttonScroll === false\n    ) {\n      console.log('REACHED!');\n      setActive({ ...ininitalState, home: 'active' });\n    } else if (\n      window.scrollY >= 750 &&\n      window.scrollY <= 1449 &&\n      about === 'inactive' &&\n      buttonScroll === false\n    ) {\n      console.log('REACHED!');\n      setActive({ ...ininitalState, about: 'active' });\n    } else if (\n      window.scrollY >= 1500 &&\n      window.scrollY < 1999 &&\n      port === 'inactive' &&\n      buttonScroll === false\n    ) {\n      console.log('REACHED!');\n      setActive({ ...ininitalState, port: 'active' });\n    } else if (\n      window.scrollY >= 2000 &&\n      cont === 'inactive' &&\n      buttonScroll === false\n    ) {\n      console.log('REACHED!');\n      setActive({ ...ininitalState, cont: 'active' });\n    }\n  };\n\n  useEffect(() => {\n    console.log('STATE ----', state);\n    console.log('BUTTON', buttonScroll);\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [state, buttonScroll]);\n\n  const { home, about, port, cont } = state;\n\n  return (\n    <div className=\"nav-bar\">\n      <nav className=\"nav-links\">\n        <button className={home} onClick={() => handleClick(1, 0, 0)}>\n          Home\n        </button>\n        <button className={about} onClick={() => handleClick(2, 750, 0)}>\n          About\n        </button>\n        <button className={port} onClick={() => handleClick(3, 1500, 0)}>\n          Portfolio\n        </button>\n        <button className={cont} onClick={() => handleClick(4, 2300, 0)}>\n          Contact\n        </button>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/oosh/Desktop/Programming/Projects/porfolio/src/particle-container.js",[],"/Users/oosh/Desktop/Programming/Projects/porfolio/src/about.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":84,"column":6,"nodeType":"37","endLine":84,"endColumn":27,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [state, buttonScroll, handleScroll]",{"range":"44","text":"45"},[2173,2194],"[state, buttonScroll, handleScroll]"]